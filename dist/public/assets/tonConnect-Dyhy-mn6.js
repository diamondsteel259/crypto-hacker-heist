import{u as r,a as l,b as i}from"./index-MP3kJ0-V.js";function d(){const[e]=r(),a=l(),n=i();return{tonConnectUI:e,wallet:n,userFriendlyAddress:a,isConnected:!!n}}async function T(e,a,n,t){if(!e.wallet)throw new Error("Wallet not connected");const o={address:a,amount:(parseFloat(n)*1e9).toString()},c={validUntil:Math.floor(Date.now()/1e3)+600,messages:[o]};try{return(await e.sendTransaction(c)).boc}catch(s){throw console.error("Transaction failed:",s),s}}async function v(e){if(!e)return console.log("[TON Balance] No address provided"),"0.0000";console.log(`[TON Balance] Fetching balance for address: ${e}`);try{try{const n=await fetch(`https://toncenter.com/api/v3/account?address=${e}`,{headers:{Accept:"application/json"}});if(console.log(`[TON Balance] API v3 response status: ${n.status}`),n.ok){const t=await n.json();if(console.log("[TON Balance] API v3 data:",JSON.stringify(t).substring(0,200)),t&&t.balance!==void 0){const o=(parseInt(t.balance)/1e9).toFixed(4);return console.log(`[TON Balance] ✅ Success (v3): ${o} TON`),o}}else console.warn(`[TON Balance] API v3 returned non-OK status: ${n.status}`)}catch(n){console.warn("[TON Balance] API v3 failed, trying v2:",n)}const a=await fetch(`https://toncenter.com/api/v2/getAddressBalance?address=${e}`);if(console.log(`[TON Balance] API v2 response status: ${a.status}`),a.ok){const n=await a.json();if(console.log("[TON Balance] API v2 data:",JSON.stringify(n).substring(0,200)),n.ok&&n.result){const t=(parseInt(n.result)/1e9).toFixed(4);return console.log(`[TON Balance] ✅ Success (v2): ${t} TON`),t}}return console.error("[TON Balance] Both API v3 and v2 failed to return valid data"),"0.0000"}catch(a){return console.error("[TON Balance] Fatal error fetching balance:",a),"0.0000"}}export{v as g,T as s,d as u};
