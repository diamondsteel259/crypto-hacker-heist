@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;500;600;700&family=Orbitron:wght@400;500;600;700;800;900&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 220 3% 96%;

  --foreground: 220 8% 12%;

  --border: 220 5% 82%;

  --card: 220 4% 93%;

  --card-foreground: 220 8% 12%;

  --card-border: 220 6% 86%;

  --sidebar: 220 5% 89%;

  --sidebar-foreground: 220 9% 15%;

  --sidebar-border: 220 7% 82%;

  --sidebar-primary: 150 75% 42%;

  --sidebar-primary-foreground: 150 15% 98%;

  --sidebar-accent: 220 8% 85%;

  --sidebar-accent-foreground: 220 10% 18%;

  --sidebar-ring: 150 70% 45%;

  --popover: 220 6% 88%;

  --popover-foreground: 220 10% 14%;

  --popover-border: 220 8% 80%;

  --primary: 150 75% 42%;

  --primary-foreground: 150 15% 98%;

  --secondary: 220 8% 82%;

  --secondary-foreground: 220 12% 18%;

  --muted: 220 10% 86%;

  --muted-foreground: 220 12% 22%;

  --accent: 200 15% 84%;

  --accent-foreground: 200 18% 18%;

  --destructive: 25 88% 48%;

  --destructive-foreground: 25 20% 98%;

  --input: 220 12% 65%;
  --ring: 150 70% 45%;
  --chart-1: 150 65% 35%;
  --chart-2: 200 75% 38%;
  --chart-3: 25 80% 45%;
  --chart-4: 270 60% 40%;
  --chart-5: 40 70% 42%;

  --font-sans: 'JetBrains Mono', 'Courier New', monospace;
  --font-serif: Georgia, serif;
  --font-mono: 'JetBrains Mono', Menlo, monospace;
  --font-display: 'Orbitron', sans-serif;
  --radius: .5rem;
  --shadow-2xs: 0px 1px 2px 0px hsl(150 30% 25% / 0.05);
  --shadow-xs: 0px 1px 2px 0px hsl(150 30% 25% / 0.08);
  --shadow-sm: 0px 1px 3px 0px hsl(150 30% 25% / 0.10), 0px 1px 2px -1px hsl(150 30% 25% / 0.10);
  --shadow: 0px 2px 4px -1px hsl(150 30% 25% / 0.10), 0px 4px 6px -1px hsl(150 30% 25% / 0.10);
  --shadow-md: 0px 4px 6px -1px hsl(150 30% 25% / 0.10), 0px 2px 4px -2px hsl(150 30% 25% / 0.08);
  --shadow-lg: 0px 10px 15px -3px hsl(150 30% 25% / 0.10), 0px 4px 6px -4px hsl(150 30% 25% / 0.08);
  --shadow-xl: 0px 20px 25px -5px hsl(150 30% 25% / 0.10), 0px 8px 10px -6px hsl(150 30% 25% / 0.08);
  --shadow-2xl: 0px 25px 50px -12px hsl(150 30% 25% / 0.25);
  --tracking-normal: 0em;
  --spacing: 0.25rem;
  
  /* Mobile compact spacing */
  @media (max-width: 768px) {
    --spacing: 0.15rem;
  }

  --matrix-green: 150 75% 42%;
  --cyber-blue: 200 85% 52%;
  --neon-orange: 25 90% 58%;
  --ton-blue: 207 85% 52%;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 220 15% 8%;

  --foreground: 150 18% 85%;

  --border: 150 28% 20%;

  --card: 220 13% 12%;

  --card-foreground: 150 16% 82%;

  --card-border: 220 12% 16%;

  --sidebar: 220 14% 10%;

  --sidebar-foreground: 150 15% 80%;

  --sidebar-border: 220 13% 14%;

  --sidebar-primary: 150 78% 45%;

  --sidebar-primary-foreground: 150 12% 96%;

  --sidebar-accent: 220 12% 15%;

  --sidebar-accent-foreground: 150 14% 78%;

  --sidebar-ring: 150 75% 48%;

  --popover: 220 12% 14%;

  --popover-foreground: 150 14% 78%;

  --popover-border: 220 11% 18%;

  --primary: 150 80% 45%;

  --primary-foreground: 150 12% 96%;

  --secondary: 220 10% 18%;

  --secondary-foreground: 150 13% 75%;

  --muted: 220 11% 16%;

  --muted-foreground: 150 10% 62%;

  --accent: 200 12% 17%;

  --accent-foreground: 200 15% 76%;

  --destructive: 25 95% 42%;

  --destructive-foreground: 25 15% 95%;

  --input: 150 25% 28%;
  --ring: 150 75% 48%;
  --chart-1: 150 70% 50%;
  --chart-2: 200 90% 55%;
  --chart-3: 25 95% 60%;
  --chart-4: 270 65% 58%;
  --chart-5: 40 80% 55%;

  --shadow-2xs: 0px 1px 2px 0px hsl(150 80% 45% / 0.08);
  --shadow-xs: 0px 1px 2px 0px hsl(150 80% 45% / 0.12);
  --shadow-sm: 0px 1px 3px 0px hsl(150 80% 45% / 0.15), 0px 1px 2px -1px hsl(150 80% 45% / 0.15);
  --shadow: 0px 2px 4px -1px hsl(150 80% 45% / 0.15), 0px 4px 6px -1px hsl(150 80% 45% / 0.15);
  --shadow-md: 0px 4px 6px -1px hsl(150 80% 45% / 0.18), 0px 2px 4px -2px hsl(150 80% 45% / 0.12);
  --shadow-lg: 0px 10px 15px -3px hsl(150 80% 45% / 0.20), 0px 4px 6px -4px hsl(150 80% 45% / 0.12);
  --shadow-xl: 0px 20px 25px -5px hsl(150 80% 45% / 0.22), 0px 8px 10px -6px hsl(150 80% 45% / 0.12);
  --shadow-2xl: 0px 25px 50px -12px hsl(150 80% 45% / 0.35);

  --matrix-green: 150 80% 45%;
  --cyber-blue: 200 90% 55%;
  --neon-orange: 25 95% 60%;
  --ton-blue: 207 90% 54%;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground antialiased;
    font-family: var(--font-sans);
  }

  h1, h2, h3, h4, h5, h6 {
    font-family: var(--font-display);
    letter-spacing: 0.05em;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Terminal scanline effect */
  .terminal-scanline {
    position: relative;
  }

  .terminal-scanline::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to bottom,
      rgba(255, 255, 255, 0) 50%,
      rgba(0, 0, 0, 0.02) 50%
    );
    background-size: 100% 4px;
    pointer-events: none;
    z-index: 1;
  }

  .dark .terminal-scanline::before {
    background: linear-gradient(
      to bottom,
      rgba(255, 255, 255, 0) 50%,
      rgba(0, 0, 0, 0.1) 50%
    );
  }

  /* Matrix green glow effect */
  .matrix-glow {
    text-shadow: 0 0 10px hsl(var(--matrix-green) / 0.5),
                 0 0 20px hsl(var(--matrix-green) / 0.3);
  }

  /* Cyber blue glow effect */
  .cyber-glow {
    text-shadow: 0 0 10px hsl(var(--cyber-blue) / 0.5),
                 0 0 20px hsl(var(--cyber-blue) / 0.3);
  }

  /* Terminal text gradient */
  .terminal-gradient {
    background: linear-gradient(
      135deg,
      hsl(var(--chart-1)),
      hsl(var(--chart-2))
    );
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  /* Glitch border animation */
  @keyframes glitch-border {
    0%, 100% {
      border-color: hsl(var(--matrix-green));
    }
    50% {
      border-color: hsl(var(--cyber-blue));
    }
  }

  .glitch-border {
    animation: glitch-border 3s ease-in-out infinite;
  }

  /* Pulse animation for countdown */
  @keyframes pulse-scale {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
  }

  .pulse-scale {
    animation: pulse-scale 1s ease-in-out infinite;
  }
}